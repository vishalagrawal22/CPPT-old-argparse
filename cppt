#!/usr/bin/env python3

from logic import *
import os
import argparse

app_name = "cppt"


def init(args):
    print("Initialise")
    base_path = args.path
    print("base_path: " + base_path)
    make_folder(base_path)


def fetch(args):
    print("Fetch")
    base_path = args.path
    url = args.url
    print("base_path: " + base_path)
    print("url: " + url)
    app_folder_path = base_path + "/.{}".format(app_name)
    if not os.path.exists(app_folder_path):
        make_folder(base_path)


parser = argparse.ArgumentParser(prog='{}'.format(app_name),
                                 usage='{} subcommand'.format(app_name),
                                 description='Download and run testcases from different online judges.',
                                 add_help=True)

subparsers = parser.add_subparsers(title='subcommands',
                                   description='valid subcommands',
                                   help='additional help')

init_parser = subparsers.add_parser('init',
                                    help="Create base folder",
                                    usage="{} init [-p path]".format(app_name))

init_parser.add_argument("-p", '--path',
                         metavar='path',
                         type=str,
                         default=".",
                         help='the path to folder')

init_parser.set_defaults(func=init)

fetch_parser = subparsers.add_parser('fetch',
                                     help="Fetch a problem",
                                     usage="{} fetch [-p path] url".format(app_name))

fetch_parser.add_argument("-p", '--path',
                          metavar='path',
                          type=str,
                          default=".",
                          help='the path to folder')

fetch_parser.set_defaults(func=fetch)

fetch_parser.add_argument("url",
                          type=str,
                          help='the link of the problem')

args = parser.parse_args()
if (hasattr(args, "func")):
    args.func(args)
else:
    parser.print_help()
